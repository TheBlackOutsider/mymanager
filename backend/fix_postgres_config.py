#!/usr/bin/env python3
"""
Script pour corriger la configuration PostgreSQL syst√®me
"""

import subprocess
import os

def fix_postgres_config():
    print("üîß Correction de la configuration PostgreSQL...")
    
    # 1. Arr√™ter le service PostgreSQL
    print("1. Arr√™t du service PostgreSQL...")
    try:
        subprocess.run(["net", "stop", "postgresql-x64-17"], check=True, capture_output=True)
        print("‚úì Service PostgreSQL 17 arr√™t√©")
    except:
        print("‚ö† Service PostgreSQL 17 d√©j√† arr√™t√© ou erreur")
    
    try:
        subprocess.run(["net", "stop", "postgresql-x64-13"], check=True, capture_output=True)
        print("‚úì Service PostgreSQL 13 arr√™t√©")
    except:
        print("‚ö† Service PostgreSQL 13 d√©j√† arr√™t√© ou erreur")
    
    # 2. Modifier le fichier postgresql.conf
    print("\n2. Modification de postgresql.conf...")
    
    # Chercher les fichiers de configuration
    config_paths = [
        "C:/Program Files/PostgreSQL/17/data/postgresql.conf",
        "C:/Program Files/PostgreSQL/13/data/postgresql.conf",
        "C:/Program Files (x86)/PostgreSQL/17/data/postgresql.conf",
        "C:/Program Files (x86)/PostgreSQL/13/data/postgresql.conf"
    ]
    
    for config_path in config_paths:
        if os.path.exists(config_path):
            print(f"Fichier trouv√©: {config_path}")
            
            # Lire le contenu
            with open(config_path, 'r', encoding='utf-8') as f:
                content = f.read()
            
            # Ajouter/modifier les param√®tres d'encodage
            encoding_settings = """
# Configuration d'encodage forc√©e
lc_messages = 'C'
lc_monetary = 'C'
lc_numeric = 'C'
lc_time = 'C'
client_min_messages = 'error'
log_min_messages = 'error'
"""
            
            if 'lc_messages' not in content:
                with open(config_path, 'a', encoding='utf-8') as f:
                    f.write(encoding_settings)
                print(f"‚úì Param√®tres d'encodage ajout√©s √† {config_path}")
            else:
                print(f"‚ö† Param√®tres d'encodage d√©j√† pr√©sents dans {config_path}")
    
    # 3. Red√©marrer le service
    print("\n3. Red√©marrage du service PostgreSQL...")
    try:
        subprocess.run(["net", "start", "postgresql-x64-17"], check=True, capture_output=True)
        print("‚úì Service PostgreSQL 17 red√©marr√©")
    except:
        print("‚ö† Erreur lors du red√©marrage de PostgreSQL 17")
    
    print("\nüéØ Configuration PostgreSQL corrig√©e!")
    print("Essayez maintenant de d√©marrer le backend...")

if __name__ == "__main__":
    fix_postgres_config() 